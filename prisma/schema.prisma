// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Enum для типов рабочего дня
enum DayType {
  WORK_DAY     // Рабочий день (по умолчанию)
  DAY_OFF      // Выходной
  VACATION     // Отпуск
  SICK_LEAVE   // Больничный
  ABSENCE      // Прогул
  UNPAID_LEAVE // Выходной за свой счет
}

// Модель пользователя системы
model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String?   @unique
  password  String
  name      String
  role      UserRole  @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]
}

// Роли пользователей
enum UserRole {
  ADMIN
  MANAGER
  USER
}

// Сессии пользователей
model Session {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Модель для сотрудников
model Employee {
  id        String      @id @default(uuid())
  name      String
  position  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  workDays  WorkDay[]

  @@map("employees")
}

// Модель для рабочих дней
model WorkDay {
  id         String     @id @default(uuid())
  date       DateTime
  dayType    DayType    @default(WORK_DAY)
  employee   Employee   @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  employeeId String
  timeEntry  TimeEntry?
  comment    String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@unique([date, employeeId])
  @@map("work_days")
}

// Модель для записей о времени прихода/ухода
model TimeEntry {
  id        String   @id @default(uuid())
  startTime DateTime?
  endTime   DateTime?
  workDay   WorkDay  @relation(fields: [workDayId], references: [id], onDelete: Cascade)
  workDayId String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("time_entries")
}
